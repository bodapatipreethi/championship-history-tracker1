import pandas as pd
import tkinter as tk
from ttkthemes import ThemedStyle
from tkinter import messagebox

def read_championship_data(championship_data):
    try:
        return pd.read_csv(championship_data)
    except FileNotFoundError:
        messagebox.showerror("File Error", f"File '{championship_data}' not found.")
        return pd.DataFrame()

def read_player_data(player_data):
    try:
        return pd.read_csv(player_data)  # Read CSV file using pandas
    except FileNotFoundError:
        messagebox.showerror("File Error", f"File '{player_data}' not found.")
        return None

def view_championship_details():
    sport = sport_var.get().strip()  # Remove extra whitespaces
    category = category_var.get().strip()  # Remove extra whitespaces
    year = int(year_entry.get())
    
    data = cricket_data if sport == "Cricket" else basketball_data
    if not data.empty and year in data['Year'].values:
        details = data[(data['Year'] == year) & (data['Category'] == category)]
        if not details.empty:
            winner = details.iloc[0]['Winner']
            runner_up = details.iloc[0]['Runner-up']
            messagebox.showinfo("Championship Details", 
                                f"Winner: {winner}\nRunner-up: {runner_up}")
        else:
            messagebox.showinfo("Championship Details", 
                                f"No championship details found for {category} {sport} in {year}.")
    else:
        messagebox.showinfo("Championship Details", 
                            f"No championship details found for {category} {sport} in {year}.")

def search_player():
    player_name = player_entry.get()
    player_details = ""
    if player_data is not None:
        # Iterate over the rows of the DataFrame
        for index, row in player_data.iterrows():
            if row['Player Name'] == player_name:
                player_details += f"\nPlayer details for {player_name}:\n"
                for column, value in row.items():
                    player_details += f"{column.lower()}: {value}\n"
                break  # Exit loop once player details are found
        if not player_details:
            player_details = f"Player '{player_name}' not found."
    else:
        player_details = "Player data not loaded."
    messagebox.showinfo("Player Details", player_details)

# Load data from files
cricket_data = read_championship_data("cricket_championship_data.csv")
basketball_data = read_championship_data("basketball_championship_data.csv")

# Load player data from file
player_data = read_player_data("player_data.csv")

# Create main window
root = tk.Tk()
root.title("Championship Tracker")

# Apply the 'equilux' theme
style = ThemedStyle(root)
style.set_theme("equilux")

# Sport selection
sport_label = tk.Label(root, text="Select Sport:")
sport_label.grid(row=0, column=0, sticky="w")
sport_var = tk.StringVar(root)
sport_var.set("Cricket/Basketball")
sport_option = tk.OptionMenu(root, sport_var, "Cricket", "Basketball")
sport_option.grid(row=0, column=1, padx=5, pady=5)

# Championship category selection
category_label = tk.Label(root, text="Select Category:")
category_label.grid(row=1, column=0, sticky="w")
category_var = tk.StringVar(root)
category_var.set("Select Category")
category_option = tk.OptionMenu(root, category_var, "T20", "IPL", "Test", "ODI", "NBA Finals", "SABA")
category_option.grid(row=1, column=1, padx=5, pady=5)

# Year entry
year_label = tk.Label(root, text="Enter Year:")
year_label.grid(row=2, column=0, sticky="w")
year_entry = tk.Entry(root)
year_entry.grid(row=2, column=1, padx=5, pady=5)

# View championship details button
view_button = tk.Button(root, text="View Details", command=view_championship_details)
view_button.grid(row=3, column=0, columnspan=2, pady=5)

# Player search entry
player_label = tk.Label(root, text="Enter Player Name:")
player_label.grid(row=4, column=0, sticky="w")
player_entry = tk.Entry(root)
player_entry.grid(row=4, column=1, padx=5, pady=5)

# Search player button
search_button = tk.Button(root, text="Search Player", command=search_player)
search_button.grid(row=5, column=0, columnspan=2, pady=5)

root.mainloop()